{"ast":null,"code":"var _jsxFileName = \"/Users/yinkarobert/Documents/form/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"0gOgJILy4SAo8AFc6nXz38Q86n4=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/yinkarobert/Documents/form/src/components/SimpleInput.js"],"names":["React","useState","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","enteredNameIsValid","trim","nameInputIsInvalid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","submitHandler","preventDefault","console","log","nameInputClasses"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMU,kBAAkB,GAAGN,WAAW,CAACO,IAAZ,OAAuB,EAAlD;AACA,QAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBJ,kBAAlD;AAEAL,EAAAA,SAAS,CAAC,MAAK;AAEX,QAAGS,kBAAH,EAAsB;AAClBD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAEK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GAPQ,EAON,CAACC,kBAAD,CAPM,CAAT;;AAUA,QAAMG,sBAAsB,GAAGC,KAAK,IAAI;AACpCT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,GAFD;;AAKA,QAAMC,oBAAoB,GAAGH,KAAK,IAAI;AAClCP,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH,GAFD;;AAIA,QAAMW,aAAa,GAAGJ,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACK,cAAN;AAEAZ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAG,CAACG,kBAAJ,EAAuB;AACnB;AACH;;AAEDU,IAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AAEAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,GAbD;;AAkBA,QAAMe,gBAAgB,GAAGV,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;AAGF,sBACE;AAAM,IAAA,QAAQ,EAAEM,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,MAFP;AAGI,QAAA,QAAQ,EAAET,sBAHd;AAII,QAAA,MAAM,EAAEI,oBAJZ;AAKI,QAAA,KAAK,EAAEb;AALX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWI;AAAA,gBAAIQ,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnED;;GAAMV,W;;KAAAA,W;AAqEN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '../index.css';\n\nconst SimpleInput = (props) => {\n\n    const [enteredName, setEnteredName] = useState('');\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const enteredNameIsValid = enteredName.trim() !== '';\n    const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n    useEffect(()=> {\n\n        if(enteredNameIsValid){\n            setFormIsValid(true);\n        }else{\n            setFormIsValid(false);\n        }\n    }, [enteredNameIsValid]);\n\n\n    const nameInputChangeHandler = event => {\n        setEnteredName(event.target.value);\n    }\n\n\n    const nameInputBlurHandler = event => {\n        setEnteredNameTouched(true);\n    };\n\n    const submitHandler = event => {\n        event.preventDefault();\n\n        setEnteredNameTouched(true)\n\n        if(!enteredNameIsValid){\n            return;\n        }\n\n        console.log(enteredName);\n\n        setEnteredName('');\n        setEnteredNameTouched(false);\n    };\n\n\n\n\n    const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n            type='text'\n            id='name'\n            onChange={nameInputChangeHandler}\n            onBlur={nameInputBlurHandler}\n            value={enteredName}\n        />\n      </div>\n        <p>{nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}</p>\n      <div className=\"form-actions\">\n        <button disabled>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}